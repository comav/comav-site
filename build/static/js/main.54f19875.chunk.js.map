{"version":3,"sources":["hooks/useScrollPos.js","components/menu.js","components/avatar.js","components/project.js","screens/projects.js","App.js","reportWebVitals.js","index.js"],"names":["isBrowser","window","getScrollPosition","element","useWindow","x","y","position","current","document","body","getBoundingClientRect","scrollX","scrollY","left","top","Menu","useState","sticky","setSticky","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","useLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","useScrollPosition","isShow","className","as","mb","sx","transform","transition","bottom","Avatar","src","alt","Project","Projects","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6SAEMA,EAAY,qBAAOC,OAEzB,SAASC,EAAT,GAAoD,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACpC,IAAKJ,EAAW,MAAO,CAAEK,EAAG,EAAGC,EAAG,GAElC,IACMC,GADSJ,EAAUA,EAAQK,QAAUC,SAASC,MAC5BC,wBAExB,OAAOP,EACH,CAAEC,EAAGJ,OAAOW,QAASN,EAAGL,OAAOY,SAC/B,CAAER,EAAGE,EAASO,KAAMR,EAAGC,EAASQ,K,iBCNvB,SAASC,IAAQ,IAAD,EAEDC,oBAAS,GAFR,mBAEtBC,EAFsB,KAEdC,EAFc,KAY7B,ODHK,SAA2BC,EAAQC,EAAMlB,EAASC,EAAWkB,GAClE,IAAMf,EAAWgB,iBAAOrB,EAAkB,CAAEE,eAExCoB,EAAkB,KAEhBC,EAAW,WACf,IAAMC,EAAUxB,EAAkB,CAAEC,UAASC,cAC7CgB,EAAO,CAAEO,QAASpB,EAASC,QAASkB,YACpCnB,EAASC,QAAUkB,EACnBF,EAAkB,MAGpBI,2BAAgB,WACd,IAAMC,EAAe,WACfP,EACsB,OAApBE,IACFA,EAAkBM,WAAWL,EAAUH,IAGzCG,KAMJ,OAFAxB,OAAO8B,iBAAiB,SAAUF,GAE3B,kBAAM5B,OAAO+B,oBAAoB,SAAUH,MACjDR,GC/BHY,EACE,YAA2B,IAAxBN,EAAuB,EAAvBA,QACKO,EADkB,EAAdR,QACapB,EAAIqB,EAAQrB,EAC/B4B,IAAWhB,GAAQC,EAAUe,KAEnC,CAAChB,IAID,qBAAKiB,UAAU,eACfC,GAAG,SACHC,GAAG,OACHC,GAAI,CACF/B,SAAU,SACVgC,UAAWrB,EAAS,mBAAqB,gBACzCsB,WAAY,0BACZC,OAAQ,EACR3B,KAAM,GARR,SAUE,+BACE,oCACA,0CACA,uCACA,8C,MC9BO,SAAS4B,IACtB,OACE,sBAAKP,UAAU,iBAAf,UACE,qBAAKA,UAAU,SAASQ,IAAI,mDAAmDC,IAAI,mBACnF,uCACA,6D,MCLS,SAASC,IACtB,OACA,qBAAKV,UAAU,kBAAf,SACE,sC,MCFW,SAASW,IACtB,OACE,sBAAKX,UAAU,mBAAf,UACE,oBAAIA,UAAU,iBAAd,yBACA,cAACU,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,O,YCUSE,MAbf,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,cAACnB,EAAD,IACA,sBAAKmB,UAAU,eAAf,UACE,cAACO,EAAD,IACA,mBAAGP,UAAU,iBAAb,+BAEF,cAACW,EAAD,QCHSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,SAM1BZ,M","file":"static/js/main.54f19875.chunk.js","sourcesContent":["import { useRef, useLayoutEffect } from 'react'\r\n\r\nconst isBrowser = typeof window !== `undefined`\r\n\r\nfunction getScrollPosition({ element, useWindow }) {\r\n  if (!isBrowser) return { x: 0, y: 0 }\r\n\r\n  const target = element ? element.current : document.body\r\n  const position = target.getBoundingClientRect()\r\n\r\n  return useWindow\r\n    ? { x: window.scrollX, y: window.scrollY }\r\n    : { x: position.left, y: position.top }\r\n}\r\n\r\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\r\n  const position = useRef(getScrollPosition({ useWindow }))\r\n\r\n  let throttleTimeout = null\r\n\r\n  const callBack = () => {\r\n    const currPos = getScrollPosition({ element, useWindow })\r\n    effect({ prevPos: position.current, currPos })\r\n    position.current = currPos\r\n    throttleTimeout = null\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    const handleScroll = () => {\r\n      if (wait) {\r\n        if (throttleTimeout === null) {\r\n          throttleTimeout = setTimeout(callBack, wait)\r\n        }\r\n      } else {\r\n        callBack()\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll)\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll)\r\n  }, deps)\r\n}","import React, { useState } from 'react';\r\n\r\nimport { useScrollPosition } from '../hooks/useScrollPos';\r\n\r\nimport './styles/menu.css';\r\n\r\nexport default function Menu() {\r\n\r\n  const [sticky, setSticky] = useState(false)\r\n\r\n  useScrollPosition(\r\n    ({ prevPos, currPos }) => {\r\n      const isShow = currPos.y > prevPos.y\r\n      if (isShow !== sticky) setSticky(isShow)\r\n    },\r\n    [sticky]\r\n  )\r\n\r\n  return(\r\n    <div className=\"menu-wrapper\" \r\n    as=\"footer\"\r\n    mb=\"-1em\"\r\n    sx={{\r\n      position: \"sticky\",\r\n      transform: sticky ? \"translateY(100%)\" : \"translateY(0)\",\r\n      transition: \"transform 400ms ease-in\",\r\n      bottom: 0,\r\n      left: 0,\r\n    }}>\r\n      <ul>\r\n        <li>Me</li>\r\n        <li>Projects</li>\r\n        <li>Three</li>\r\n        <li>Yuh yuh</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './styles/avatar.css';\r\n\r\nexport default function Avatar() {\r\n  return(\r\n    <div className=\"avatar-wrapper\">\r\n      <img className=\"avatar\" src=\"https://avatars.githubusercontent.com/u/61016697\" alt=\"comav's avatar\" />\r\n      <h1>comav</h1>\r\n      <p>A starter in the IT world</p>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport './styles/project.css';\r\n\r\nexport default function Project() {\r\n  return(\r\n  <div className=\"project-wrapper\">\r\n    <p>lol</p>\r\n  </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Project from \"../components/project\";\r\nimport './styles/projects.css';\r\n\r\nexport default function Projects() {\r\n  return(\r\n    <div className=\"projects-wrapper\">\r\n      <h1 className=\"projects-title\">My projects</h1>\r\n      <Project />\r\n      <Project />\r\n      <Project />\r\n    </div>\r\n  )\r\n}","import Menu from './components/menu';\r\nimport Avatar from './components/avatar';\r\nimport Projects from './screens/projects';\r\n\r\nimport './App.css';\r\nimport './common.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Menu />\r\n      <div className=\"first-screen\">\r\n        <Avatar />\r\n        <p className=\"opacity-change\">Scroll further</p> \r\n      </div>\r\n      <Projects />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}